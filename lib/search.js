// Generated by CoffeeScript 1.3.3

/*

The following are valid comparison operators:

 p: {'eq', to} equal to
 p: {'nq', to} not equal to
 p: {'gt', to} greater than
 p: {'lt', to} lower than

It is possible to specify a set of options to match:

p: [{gt: to_1}, {lt: to_2}]
*/


(function() {
  var search, utils;

  utils = require('utils');

  search = {
    _options: {},
    _compare: function(operator, p1, p2) {
      switch (operator) {
        case 'eq':
          return p1 === p2;
        case 'np':
          return p1 !== p2;
        case 'gt':
          return p1 < p2;
        case 'lt':
          return p1 > p2;
      }
    },
    setOptions: function(options) {
      return this._options = options;
    },
    matches: function(ob) {
      var c, k, l, len, options, subC, subLen, subOption, _i, _len, _ref;
      options = this._options;
      len = utils.noe(options);
      c = 0;
      for (k in options) {
        if (Array.isArray(options[k])) {
          subLen = options[k].length;
          subC = 0;
          _ref = options[k];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            subOption = _ref[_i];
            for (l in subOption) {
              if (this._compare(l, subOption[l], ob[k])) {
                subC++;
              }
            }
          }
          if (subC === subLen) {
            c++;
          }
        } else {
          for (l in options[k]) {
            if (this._compare(l, options[k][l], ob[k])) {
              c++;
            }
          }
        }
      }
      return c === len;
    }
  };

  module.exports = search;

}).call(this);
