// Generated by CoffeeScript 1.3.3
(function() {
  var accessor, file, fs, path, storage, utils;

  fs = require('fs');

  path = require('path');

  utils = require('utils');

  file = require('./lib/file');

  accessor = require('./lib/accessor');

  storage = {
    _location: '',
    _operations: {
      "new": function(ob) {
        var id;
        id = 1;
        while (id in this) {
          id++;
        }
        return this[id] = ob;
      },
      find: function(options, callback) {
        return accessor.find(this, options, callback);
      },
      modify: function(options, ob, callback) {
        return accessor.modify(this, options, ob, callback);
      },
      remove: function(options, callback) {
        return accessor.remove(this, options, callback);
      },
      all: function() {
        return accessor.all(this);
      },
      clear: function() {
        return accessor.clear(this);
      }
    },
    data: {
      "new": function(category) {
        return this[category] = storage._operations;
      }
    },
    init: function(location) {
      var k, l;
      if (location == null) {
        location = 'data';
      }
      if (fs.existsSync(location)) {
        file.loadData(location, this.data);
        for (k in this.data) {
          if (utils.isObject(this.data[k])) {
            for (l in this._operations) {
              this.data[k][l] = this._operations[l];
            }
          }
        }
      } else {
        throw new Error('Database location not found!');
      }
      return this;
    },
    save: function() {
      return file.save(this._location, this.data);
    }
  };

  module.exports = storage;

}).call(this);
